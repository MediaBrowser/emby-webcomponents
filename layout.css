:root {
    /* Need the px or it won't work inside calc expression */
    --window-inset-top: 0px;
    --window-inset-bottom: 0px;
    --window-inset-left: 0px;
    --window-inset-right: 0px;
}

html {
    /* Normalize for different browsers */
    line-height: 1.35;
}

html, body {
    margin: 0 !important;
    padding: 0 !important;
    height: 100%;
    /* Needed to prevent a horizontal scrollbar when animating */
    overflow-x: hidden;
}

.overflowYScroll {
    overflow-y: scroll;
}

.noScrollY {
    overflow-y: hidden;
}

.layout-tv {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@media (pointer: none), (pointer: coarse) {
    html {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
}

@media (pointer: coarse) {
    /* Used on document.body to lock document level scrolling when dialogs are open */
    .withDialogOpen /*, .withDialogOpen > body*/ {
        overflow-y: hidden !important;
        /* Have to use this instead of none, otherwise the slideshow can't zoom */
        touch-action: pinch-zoom !important;
    }
}

.backgroundContainer {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    contain: strict;
    touch-action: none;
}

.transparentDocument, .backgroundContainer-transparent:not(.withBackdrop) {
    background: none !important;
    background-color: transparent !important;
}

.mainAnimatedPages {
    position: fixed;
    top: 0;
    left: 0;
    left: var(--window-inset-left);
    right: 0;
    right: var(--window-inset-right);
    bottom: 0;
    contain: layout style size;
}

.skinBody-withWindowScroll {
    contain: style;
    position: absolute;
}

@media all and (min-width: 48em) {

    .mainDrawer-docked {
        z-index: inherit !important;
        left: 0 !important;
        transform: none !important;
        box-shadow: none !important;
        padding-top: 0;
        top: 4.74em !important;
    }

    .mainDrawer-open-partial {
        width: 7.5em !important;
    }

    .mainDrawer-open-full {
        width: 20.205em !important;
    }

    .withSectionTabs .mainDrawer-docked {
        top: 7.26em !important;
    }

    .skinBody-withFullDrawer {
        left: 20.22em;
    }

    .skinBody-withPartialDrawer {
        left: 7.0575em;
    }
}

@media all and (min-width: 120em) {

    .withSectionTabs .mainDrawer-docked {
        top: 6.12em !important;
    }

    .mainDrawer-docked {
        top: 6.12em !important;
    }
}

.mouseIdle, .mouseIdle button, .mouseIdle select, .mouseIdle input, .mouseIdle textarea, .mouseIdle a, .mouseIdle label {
    cursor: none !important;
}

    .hide, .mouseIdle .hide-mouse-idle, .mouseIdle-tv .hide-mouse-idle-tv {
        display: none !important;
    }

.page {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    contain: layout style size;
    /* Can't use will-change because it causes the alpha picker to move when the page scrolls*/
    /*will-change: transform;*/
}

.page-windowScroll {
    /* Have to override because it breaks scrolling when dependant on window scroll */
    contain: style size !important;
}

.page-windowScroll, .padded-top-page {
    padding-top: 5.5em !important;
    padding-top: calc(5.5em + (var(--window-inset-top) * 0.7)) !important;
}

    .page-windowScroll.withTabs, .withTabs .padded-top-page {
        padding-top: 8em !important;
        padding-top: calc(8em + (var(--window-inset-top) * 0.7)) !important;
    }

.page-withiOSScrollHack {
    overflow: initial !important;
}

@media all and (min-width: 120em) {
    .page-windowScroll, .padded-top-page {
        padding-top: 7em !important;
        padding-top: calc(7em + (var(--window-inset-top) * 0.7)) !important;
    }

        .page-windowScroll.withTabs, .withTabs .padded-top-page {
            padding-top: 6.7em !important;
            padding-top: calc(6.7em + (var(--window-inset-top) * 0.7)) !important;
        }
}

@keyframes view-fadeout {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

@keyframes view-fadein {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes view-slideleft {
    from {
        transform: translate3d(100%, 0, 0);
    }

    to {
        transform: none;
    }
}

@keyframes view-slideleft-r {
    from {
        transform: none;
    }

    to {
        transform: translate3d(-100%, 0, 0);
    }
}

@keyframes view-slideright {
    from {
        transform: translate3d(-100%, 0, 0);
    }

    to {
        transform: none;
    }
}

@keyframes view-slideright-r {
    from {
        transform: none;
    }

    to {
        transform: translate3d(100%, 0, 0);
    }
}

@media all and (min-width: 50em) {

    /*
    Forms
    */
    form, .readOnlyContent {
        max-width: 54em;
    }
}

.auto-center {
    margin-left: auto;
    margin-right: auto;
}

.skinBody-withFullDrawer .auto-center {
    margin-left: 0;
    margin-right: 0;
}


.listTotalRecordCount {
    margin: 0 .75em;
}

@media all and (max-width: 30em) {

    .listTotalRecordCount {
        display: none !important;
    }
}

.fieldDescription {
    padding-left: .15em;
    font-weight: normal;
    white-space: normal !important;
}

    .fieldDescription + .fieldDescription {
        margin-top: .3em;
    }
